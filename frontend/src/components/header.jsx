import React, { useState, useRef, useEffect } from 'react';
import { Link } from 'react-router-dom';
import '../css/Header.css';

const menuItems = [
  {
    id: "awareness",
    title: "Nh·∫≠n Th·ª©c v·ªÅ ADHD",
    content: {
      title: "Nh·∫≠n Th·ª©c v·ªÅ ADHD",
      description:
        "T·∫°i sao ch√∫ng ta c·∫ßn Nh·∫≠n th·ª©c v·ªÅ ADHD?\nNh·ªØng s·ª± th·∫≠t v·ªÅ ADHD b·∫°n n√™n bi·∫øt l√† g√¨?\nT√¨m hi·ªÉu nh·ªØng c√¢u tr·∫£ l·ªùi n√†y v√† nhi·ªÅu h∆°n n·ªØa trong trang danh m·ª•c Nh·∫≠n th·ª©c v·ªÅ ADHD:",
      link: "T√¨m hi·ªÉu v·ªÅ Nh·∫≠n th·ª©c ADHD",
      icon: "üìö",
    },
  },
  {
    id: "diagnosis",
    title: "Ch·∫©n ƒêo√°n ADHD",
    content: {
      title: "Ch·∫©n ƒêo√°n ADHD",
      description:
        "L√†m th·∫ø n√†o ƒë·ªÉ ƒë∆∞·ª£c ch·∫©n ƒëo√°n ADHD?\nT·∫°i sao m·ªçi ng∆∞·ªùi b·ªã ch·∫©n ƒëo√°n sai ho·∫∑c kh√¥ng bao gi·ªù ƒë∆∞·ª£c ch·∫©n ƒëo√°n?\nT√¨m hi·ªÉu t·∫•t c·∫£ nh·ªØng g√¨ b·∫°n c·∫ßn bi·∫øt v·ªÅ Ch·∫©n ƒëo√°n ADHD t·∫°i ƒë√¢y:",
      link: "T√¨m hi·ªÉu v·ªÅ Ch·∫©n ƒëo√°n ADHD",
      icon: "ü©∫",
    },
  },
  {
    id: "symptoms",
    title: "Tri·ªáu Ch·ª©ng ADHD",
    content: {
      title: "Tri·ªáu Ch·ª©ng ADHD",
      description: "Hi·ªÉu v·ªÅ c√°c tri·ªáu ch·ª©ng kh√°c nhau c·ªßa ADHD v√† c√°ch ch√∫ng bi·ªÉu hi·ªán trong cu·ªôc s·ªëng h√†ng ng√†y.",
      link: "T√¨m hi·ªÉu v·ªÅ Tri·ªáu ch·ª©ng ADHD",
      icon: "üß†",
    },
  },
  {
    id: "living",
    title: "S·ªëng Chung v·ªõi ADHD",
    content: {
      title: "S·ªëng Chung v·ªõi ADHD",
      description: "M·∫πo v√† chi·∫øn l∆∞·ª£c ƒë·ªÉ qu·∫£n l√Ω cu·ªôc s·ªëng h√†ng ng√†y v·ªõi ADHD.",
      link: "T√¨m hi·ªÉu v·ªÅ S·ªëng chung v·ªõi ADHD",
      icon: "üè†",
    },
  },
  {
    id: "stories",
    title: "C√¢u chuy·ªán ADHD",
    content: {
      title: "C√¢u chuy·ªán ADHD",
      description: "Tr·∫£i nghi·ªám th·ª±c t·∫ø v√† c√¢u chuy·ªán t·ª´ nh·ªØng ng∆∞·ªùi s·ªëng v·ªõi ADHD.",
      link: "ƒê·ªçc c√¢u chuy·ªán ADHD",
      icon: "üìñ",
    },
  },
];

const sidebarItems = ["S·ª± th·∫≠t ADHD", "Tr·ª£ gi√∫p ADHD", "ƒêi·ªÅu tr·ªã ADHD", "T·∫•t c·∫£ b√†i vi·∫øt"];

const Header = () => {
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const [hoverTimeout, setHoverTimeout] = useState(null);
  const [activeMenuItem, setActiveMenuItem] = useState("awareness");
  const [searchQuery, setSearchQuery] = useState("");
  const dropdownRef = useRef(null);

  const handleMouseEnter = () => {
    if (hoverTimeout) {
      clearTimeout(hoverTimeout);
      setHoverTimeout(null);
    }
    setIsDropdownOpen(true);
  };

  const handleMouseLeave = () => {
    const timeout = setTimeout(() => {
      setIsDropdownOpen(false);
    }, 150);
    setHoverTimeout(timeout);
  };

  const handleSearchSubmit = (e) => {
    e.preventDefault();
    console.log('Searching for:', searchQuery);
  };

  useEffect(() => {
    return () => {
      if (hoverTimeout) {
        clearTimeout(hoverTimeout);
      }
    };
  }, [hoverTimeout]);

  const activeContent = menuItems.find((item) => item.id === activeMenuItem)?.content;

  return (
    <div className="header-wrapper">
      {/* Header */}
      <header className="header-new">
        <div className="header-container-new">
          {/* Logo */}
          <div className="logo-section-new">
            <Link to="/" className="logo-new">
              <img src="/2.png" alt="ADHD Coach" className="logo-icon-new" />
              <span className="logo-text-new">S·ªï Tay T·ª± ƒê√°nh Gi√° ADHD</span>
            </Link>
          </div>

          {/* Navigation */}
          <nav className="nav-menu-new">
            <a href="#" className="nav-link-new">
              S·ªï Tay T·ª± ƒê√°nh Gi√° ADHD
            </a>

            <div 
              className="dropdown-new" 
              ref={dropdownRef} 
              onMouseEnter={handleMouseEnter} 
              onMouseLeave={handleMouseLeave}
            >
              <button className="dropdown-trigger">
                <span>T√†i Nguy√™n ADHD</span>
                <svg 
                  className={`dropdown-icon ${isDropdownOpen ? 'rotated' : ''}`}
                  width="16" 
                  height="16" 
                  viewBox="0 0 24 24" 
                  fill="none" 
                  stroke="currentColor" 
                  strokeWidth="2"
                >
                  <polyline points="6,9 12,15 18,9"></polyline>
                </svg>
              </button>

              {/* Mega Menu Dropdown */}
              <div 
                className={`mega-dropdown ${isDropdownOpen ? 'open' : ''}`}
                onMouseEnter={handleMouseEnter}
                onMouseLeave={handleMouseLeave}
              >
                <div className="mega-dropdown-container">
                  <div className="mega-dropdown-grid">
                    {/* Left Section - Stacked Cards */}
                    <div className="mega-left-section">
                      {/* Our ADHD Content Card */}
                      <div className="content-card purple-card">
                        <div className="card-header">
                          <div className="card-icon">
                            <span>üë©‚Äçüíª</span>
                          </div>
                          <div>
                            <h3 className="card-title">N·ªôi Dung ADHD c·ªßa Ch√∫ng T√¥i</h3>
                          </div>
                        </div>
                        <p className="card-description">Duy·ªát qua t·∫•t c·∫£ c√°c b√†i vi·∫øt c·ªßa ch√∫ng t√¥i!</p>
                        <a href="#" className="card-link">
                          Blog ADHD
                        </a>
                      </div>

                      {/* Self-Assessment Workbook Card */}
                      <div className="content-card cyan-card">
                        <div className="card-header">
                          <div className="card-icon">
                            <span>üìã</span>
                          </div>
                        </div>
                        <h3 className="card-title">S·ªï Tay T·ª± ƒê√°nh Gi√° ADHD</h3>
                        <p className="card-description">
                          Tr·ª±c quan h√≥a v√† ƒë√°nh gi√° 25 ƒë·∫∑c ƒëi·ªÉm ADHD v√† hi·ªÉu c√°ch ch√∫ng ·∫£nh h∆∞·ªüng ƒë·∫øn cu·ªôc s·ªëng c·ªßa b·∫°n.
                        </p>
                        <a href="#" className="card-link">
                          S·ªï Tay ADHD
                        </a>
                      </div>
                    </div>

                    {/* Center - Menu Items */}
                    <div className="mega-center-section">
                      <div className="menu-items-list">
                        {menuItems.map((item) => (
                          <button
                            key={item.id}
                            onMouseEnter={() => setActiveMenuItem(item.id)}
                            className={`menu-item-btn ${activeMenuItem === item.id ? 'active' : ''}`}
                          >
                            <span className="menu-item-text">{item.title}</span>
                            <svg className="menu-item-arrow" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                              <polyline points="9,18 15,12 9,6"></polyline>
                            </svg>
                          </button>
                        ))}
                      </div>
                    </div>

                    {/* Right Section - Active Content */}
                    <div className="mega-right-section">
                      {activeContent && (
                        <div className={`active-content ${isDropdownOpen ? 'visible' : ''}`}>
                          <div className="content-header">
                            <div className="content-icon">
                              <span>{activeContent.icon}</span>
                            </div>
                            <h3 className="content-title">{activeContent.title}</h3>
                          </div>

                          <p className="content-description">
                            {activeContent.description}
                          </p>

                          <a href="#" className="content-link">
                            {activeContent.link}
                            <svg className="link-arrow" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                              <polyline points="9,18 15,12 9,6"></polyline>
                            </svg>
                          </a>

                          {/* Sidebar Items */}
                          <div className="sidebar-section">
                            <div className="sidebar-items">
                              {sidebarItems.map((item, index) => (
                                <a
                                  key={index}
                                  href="#"
                                  className={`sidebar-item ${index === sidebarItems.length - 1 ? 'last-item' : ''}`}
                                >
                                  {item}
                                </a>
                              ))}
                            </div>
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <a href="#" className="nav-link-new">C·ª≠a H√†ng</a>
            <Link to="/ContactUs" className="nav-link-new">V·ªÅ Ch√∫ng T√¥i</Link>
          </nav>

          {/* Search and CTA */}
          <div className="header-actions-new">
            <form onSubmit={handleSearchSubmit} className="search-form-new">
              <input
                type="text"
                placeholder="T√¥i mu·ªën t√¨m..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="search-input-new"
              />
              <button type="submit" className="search-btn-new">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                  <circle cx="11" cy="11" r="8"></circle>
                  <path d="m21 21-4.35-4.35"></path>
                </svg>
              </button>
            </form>

            <button className="cta-btn-new">Ki·ªÉm Tra ADHD Mi·ªÖn Ph√≠</button>
          </div>
        </div>
      </header>
    </div>
  );
};

export default Header;